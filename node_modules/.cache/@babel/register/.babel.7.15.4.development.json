{
  "{\"assumptions\":{},\"sourceRoot\":\"S:\\\\ReactJS\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"S:\\\\ReactJS\\\\backend\",\"filename\":\"S:\\\\ReactJS\\\\backend\\\\src\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"S:\\\\ReactJS\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.4": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "S:\\ReactJS\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "S:\\ReactJS\\backend",
      "filename": "S:\\ReactJS\\backend\\src\\server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "S:\\ReactJS\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFilename": "server.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "S:\\ReactJS\\backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "S:\\ReactJS\\backend\\src\\",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, \"/build\")));\napp.use(_bodyParser[\"default\"].json());\n\nvar DB = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(operations, res) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb.MongoClient.connect(\"mongodb://localhost:27017\", {\n              useNewUrlParser: true\n            });\n\n          case 3:\n            client = _context.sent;\n            db = client.db(\"blista-blog\");\n            _context.next = 7;\n            return operations(db);\n\n          case 7:\n            client.close();\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(200).json(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function DB(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.get(\"/api/project/:name\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            DB( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(db) {\n                var projectName, projectInfo;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        projectName = req.params.name;\n                        _context2.next = 3;\n                        return db.collection(\"projects\").findOne({\n                          name: projectName\n                        });\n\n                      case 3:\n                        projectInfo = _context2.sent;\n                        res.status(200).json(projectInfo);\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x5) {\n                return _ref3.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // app.get(\"/hello\", (req, res) => res.send(\"Hello\") );\n// app.post(\"/hello\", (req, res) => res.send(`Hello ${req.body.name}`));\n// app.get(\"/hello/:name\", (req,res) => res.send(`Hello ${req.body.name}`) );\n\napp.post(\"/api/project/:name/votes/\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            DB( /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(db) {\n                var projectName, projectInfo, upprojectInfo;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        projectName = req.params.name;\n                        _context4.next = 3;\n                        return db.collection(\"projects\").findOne({\n                          name: projectName\n                        });\n\n                      case 3:\n                        projectInfo = _context4.sent;\n                        _context4.next = 6;\n                        return db.collection(\"projects\").updateOne({\n                          name: projectName\n                        }, {\n                          '$set': {\n                            votes: projectInfo.votes + 1\n                          }\n                        });\n\n                      case 6:\n                        _context4.next = 8;\n                        return db.collection(\"projects\").findOne({\n                          name: projectName\n                        });\n\n                      case 8:\n                        upprojectInfo = _context4.sent;\n                        res.status(200).json(upprojectInfo);\n\n                      case 10:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post(\"/api/project/:name/addcomt/\", function (req, res) {\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  var projectName = req.params.name;\n  DB( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(db) {\n      var projectInfo, upprojectInfo;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return db.collection(\"projects\").findOne({\n                name: projectName\n              });\n\n            case 2:\n              projectInfo = _context6.sent;\n              _context6.next = 5;\n              return db.collection(\"projects\").updateOne({\n                name: projectName\n              }, {\n                \"$set\": {\n                  Comment: projectInfo.Comment.concat({\n                    username: username,\n                    text: text\n                  })\n                }\n              });\n\n            case 5:\n              _context6.next = 7;\n              return db.collection(\"projects\").findOne({\n                name: projectName\n              });\n\n            case 7:\n              upprojectInfo = _context6.sent;\n              res.status(200).json(upprojectInfo);\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), res);\n});\napp.get(\"*\", function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname + \"/build/index.html\"));\n});\napp.listen(8000, function () {\n  return console.log(\"@8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJleHByZXNzIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJib2R5UGFyc2VyIiwianNvbiIsIkRCIiwib3BlcmF0aW9ucyIsInJlcyIsIk1vbmdvQ2xpZW50IiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsImNsaWVudCIsImRiIiwiY2xvc2UiLCJzdGF0dXMiLCJnZXQiLCJyZXEiLCJwcm9qZWN0TmFtZSIsInBhcmFtcyIsIm5hbWUiLCJjb2xsZWN0aW9uIiwiZmluZE9uZSIsInByb2plY3RJbmZvIiwicG9zdCIsInVwZGF0ZU9uZSIsInZvdGVzIiwidXBwcm9qZWN0SW5mbyIsImJvZHkiLCJ1c2VybmFtZSIsInRleHQiLCJDb21tZW50IiwiY29uY2F0Iiwic2VuZEZpbGUiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsOEJBQWVDLGlCQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBb0IsUUFBcEIsQ0FBZixDQUFSO0FBQ0FMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSyx1QkFBV0MsSUFBWCxFQUFSOztBQUdBLElBQU1DLEVBQUU7QUFBQSxxRUFBRyxpQkFBT0MsVUFBUCxFQUFrQkMsR0FBbEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUljQyxxQkFBWUMsT0FBWixDQUFvQiwyQkFBcEIsRUFBaUQ7QUFBRUMsY0FBQUEsZUFBZSxFQUFFO0FBQW5CLGFBQWpELENBSmQ7O0FBQUE7QUFJREMsWUFBQUEsTUFKQztBQUtEQyxZQUFBQSxFQUxDLEdBS0lELE1BQU0sQ0FBQ0MsRUFBUCxDQUFVLGFBQVYsQ0FMSjtBQUFBO0FBQUEsbUJBT0ROLFVBQVUsQ0FBQ00sRUFBRCxDQVBUOztBQUFB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dEIsQ0FBYjtBQUNILENBRkQ7QUFJQUwsR0FBRyxDQUFDb0MsTUFBSixDQUFXLElBQVgsRUFBaUI7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFaLENBQU47QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiJTOlxcUmVhY3RKU1xcYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgIGV4cHJlc3MgIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xyXG5pbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gXCJtb25nb2RiXCI7XHJcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsXCIvYnVpbGRcIikpKVxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcblxyXG5jb25zdCBEQiA9IGFzeW5jIChvcGVyYXRpb25zLHJlcykgPT4ge1xyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgICAgXHJcbiAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBNb25nb0NsaWVudC5jb25uZWN0KFwibW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxN1wiLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSB9KTtcclxuICAgIGNvbnN0IGRiID0gY2xpZW50LmRiKFwiYmxpc3RhLWJsb2dcIik7XHJcblxyXG4gICAgYXdhaXQgb3BlcmF0aW9ucyhkYik7XHJcbiAgICBcclxuICAgIGNsaWVudC5jbG9zZSgpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihlcnJvcik7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuYXBwLmdldChcIi9hcGkvcHJvamVjdC86bmFtZVwiLCBhc3luYyAocmVxLHJlcykgPT4ge1xyXG5cclxuICAgIERCKCBhc3luYyAoZGIpID0+IHtcclxuXHJcblxyXG4gICAgICAgIGNvbnN0IHByb2plY3ROYW1lID0gcmVxLnBhcmFtcy5uYW1lO1xyXG5cclxuXHJcbiAgICBjb25zdCBwcm9qZWN0SW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9qZWN0c1wiKS5maW5kT25lKHtuYW1lOnByb2plY3ROYW1lfSk7XHJcblxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24ocHJvamVjdEluZm8pO1xyXG5cclxuICAgIH0scmVzICk7XHJcbiAgICAgICAgXHJcbiAgIFxyXG5cclxufSlcclxuXHJcbi8vIGFwcC5nZXQoXCIvaGVsbG9cIiwgKHJlcSwgcmVzKSA9PiByZXMuc2VuZChcIkhlbGxvXCIpICk7XHJcblxyXG4vLyBhcHAucG9zdChcIi9oZWxsb1wiLCAocmVxLCByZXMpID0+IHJlcy5zZW5kKGBIZWxsbyAke3JlcS5ib2R5Lm5hbWV9YCkpO1xyXG5cclxuLy8gYXBwLmdldChcIi9oZWxsby86bmFtZVwiLCAocmVxLHJlcykgPT4gcmVzLnNlbmQoYEhlbGxvICR7cmVxLmJvZHkubmFtZX1gKSApO1xyXG5cclxuYXBwLnBvc3QoXCIvYXBpL3Byb2plY3QvOm5hbWUvdm90ZXMvXCIsIGFzeW5jIChyZXEscmVzKSA9PiB7XHJcbiAgICBcclxuICAgIERCKGFzeW5jIChkYikgPT4ge1xyXG5cclxuICAgICAgICBjb25zdCBwcm9qZWN0TmFtZSA9IHJlcS5wYXJhbXMubmFtZTtcclxuXHJcbiAgICBjb25zdCBwcm9qZWN0SW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9qZWN0c1wiKS5maW5kT25lKHtuYW1lOnByb2plY3ROYW1lfSk7XHJcblxyXG4gICAgYXdhaXQgZGIuY29sbGVjdGlvbihcInByb2plY3RzXCIpLnVwZGF0ZU9uZSh7bmFtZTpwcm9qZWN0TmFtZX0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAnJHNldCc6IHtcclxuICAgICAgICAgICAgICAgIHZvdGVzOiBwcm9qZWN0SW5mby52b3RlcyArIDEsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICBjb25zdCB1cHByb2plY3RJbmZvID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInByb2plY3RzXCIpLmZpbmRPbmUoe25hbWU6cHJvamVjdE5hbWV9KTtcclxuXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih1cHByb2plY3RJbmZvKTtcclxuXHJcbiAgICB9LHJlcyk7XHJcbiAgICBcclxuICAgIFxyXG5cclxuICAgIFxyXG4gICAgXHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoXCIvYXBpL3Byb2plY3QvOm5hbWUvYWRkY29tdC9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB7IHVzZXJuYW1lLCB0ZXh0IH0gPSByZXEuYm9keTtcclxuICAgIGNvbnN0IHByb2plY3ROYW1lID0gcmVxLnBhcmFtcy5uYW1lO1xyXG5cclxuICAgIERCKCBhc3luYyAoZGIpID0+IHtcclxuICAgICAgICBjb25zdCBwcm9qZWN0SW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9qZWN0c1wiKS5maW5kT25lKHtuYW1lOnByb2plY3ROYW1lfSk7XHJcbiAgICAgICAgYXdhaXQgZGIuY29sbGVjdGlvbihcInByb2plY3RzXCIpLnVwZGF0ZU9uZSh7bmFtZTpwcm9qZWN0TmFtZX0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFwiJHNldFwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgQ29tbWVudDogcHJvamVjdEluZm8uQ29tbWVudC5jb25jYXQoe3VzZXJuYW1lLHRleHR9KSxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgdXBwcm9qZWN0SW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9qZWN0c1wiKS5maW5kT25lKHtuYW1lOnByb2plY3ROYW1lfSk7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHVwcHJvamVjdEluZm8pO1xyXG4gICAgfSxyZXMpO1xyXG5cclxuICAgIFxyXG59KTtcclxuXHJcbmFwcC5nZXQoXCIqXCIsIChyZXEscmVzKSA9PiB7XHJcbiAgICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSArIFwiL2J1aWxkL2luZGV4Lmh0bWxcIikpO1xyXG59KTtcclxuXHJcbmFwcC5saXN0ZW4oODAwMCwgKCkgPT4gY29uc29sZS5sb2coXCJAODAwMFwiKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "express",
        "path",
        "join",
        "__dirname",
        "bodyParser",
        "json",
        "DB",
        "operations",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "client",
        "db",
        "close",
        "status",
        "get",
        "req",
        "projectName",
        "params",
        "name",
        "collection",
        "findOne",
        "projectInfo",
        "post",
        "updateOne",
        "votes",
        "upprojectInfo",
        "body",
        "username",
        "text",
        "Comment",
        "concat",
        "sendFile",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "S:\\ReactJS\\backend\\src\\",
      "sourcesContent": [
        "import  express  from \"express\";\r\nimport bodyParser from \"body-parser\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport path from \"path\";\r\n\r\nconst app = express();\r\n\r\napp.use(express.static(path.join(__dirname,\"/build\")))\r\napp.use(bodyParser.json());\r\n\r\n\r\nconst DB = async (operations,res) => {\r\n\r\n    try {\r\n        \r\n    const client = await MongoClient.connect(\"mongodb://localhost:27017\", { useNewUrlParser: true });\r\n    const db = client.db(\"blista-blog\");\r\n\r\n    await operations(db);\r\n    \r\n    client.close();\r\n    } catch (error) {\r\n        res.status(200).json(error);\r\n    }\r\n\r\n}\r\n\r\n\r\napp.get(\"/api/project/:name\", async (req,res) => {\r\n\r\n    DB( async (db) => {\r\n\r\n\r\n        const projectName = req.params.name;\r\n\r\n\r\n    const projectInfo = await db.collection(\"projects\").findOne({name:projectName});\r\n\r\n    res.status(200).json(projectInfo);\r\n\r\n    },res );\r\n        \r\n   \r\n\r\n})\r\n\r\n// app.get(\"/hello\", (req, res) => res.send(\"Hello\") );\r\n\r\n// app.post(\"/hello\", (req, res) => res.send(`Hello ${req.body.name}`));\r\n\r\n// app.get(\"/hello/:name\", (req,res) => res.send(`Hello ${req.body.name}`) );\r\n\r\napp.post(\"/api/project/:name/votes/\", async (req,res) => {\r\n    \r\n    DB(async (db) => {\r\n\r\n        const projectName = req.params.name;\r\n\r\n    const projectInfo = await db.collection(\"projects\").findOne({name:projectName});\r\n\r\n    await db.collection(\"projects\").updateOne({name:projectName},\r\n        {\r\n            '$set': {\r\n                votes: projectInfo.votes + 1,\r\n            },\r\n        })\r\n\r\n    const upprojectInfo = await db.collection(\"projects\").findOne({name:projectName});\r\n\r\n    res.status(200).json(upprojectInfo);\r\n\r\n    },res);\r\n    \r\n    \r\n\r\n    \r\n    \r\n});\r\n\r\napp.post(\"/api/project/:name/addcomt/\", (req, res) => {\r\n    const { username, text } = req.body;\r\n    const projectName = req.params.name;\r\n\r\n    DB( async (db) => {\r\n        const projectInfo = await db.collection(\"projects\").findOne({name:projectName});\r\n        await db.collection(\"projects\").updateOne({name:projectName},\r\n            {\r\n                \"$set\": {\r\n                    Comment: projectInfo.Comment.concat({username,text}),\r\n                },\r\n            });\r\n\r\n            const upprojectInfo = await db.collection(\"projects\").findOne({name:projectName});\r\n            res.status(200).json(upprojectInfo);\r\n    },res);\r\n\r\n    \r\n});\r\n\r\napp.get(\"*\", (req,res) => {\r\n    res.sendFile(path.join(__dirname + \"/build/index.html\"));\r\n});\r\n\r\napp.listen(8000, () => console.log(\"@8000\"));"
      ]
    },
    "sourceType": "script",
    "mtime": 1630909194473
  }
}