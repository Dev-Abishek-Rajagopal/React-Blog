{"version":3,"sources":["pages/HomePage.js","pages/About.js","components/ProjectList.js","components/Commentlist.js","components/Vote.js","pages/NotFound.js","pages/Project-content.js","components/Addcomment.js","pages/Project.js","pages/ProjectListpage.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","About","ProjectList","projects","map","project","key","className","to","name","title","content","substring","Commentlist","comment","username","text","VoteSection","projectName","votes","setprojectInfo","voteProject","a","fetch","method","result","json","body","id","onClick","NotFound","Addcomment","useState","setUsername","commenttext","setcommenttext","addcomment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","Project","match","params","find","Comment","projectInfo","useEffect","fetchData","otherProjects","filter","console","log","Vote","paragraph","ProjectListpage","NavBar","App","path","component","exact","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.802ed155.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst HomePage = () => (\r\n <>\r\n    <h1>Dear Recruiter,</h1><br></br>\r\n\r\n    <p>After completing my undergraduate degree, higher studies were the priority for me. But I wish to gather some valuable work experience to gain a large perspective of the industry. Aligning to this Idea, I have three years of experience in the software field. Later I joined the University of Windsor for my graduate degree which helped me to gain further insight. With my experience and knowledge, I can support Google as a Software Developer.\r\n\r\n<br></br>My career in Accenture solutions helped me develop thorough insights into Software Testing, an important life-cycle of software development that improves performance, reliability, and quality of a product. I supported my project by implementing RPA scripts and manual testing with the web and mobile applications of a banking client. Later I had the opportunity to join Zoho Corporation as a Python backend developer where I was working on a wide range of technologies like Django, MySQL, Redis, Docker, GitLab, etc. After completing my probation period in Zoho, my team insisted me work on Frontend technologies like EmberJS and HTML along with the backend development. After my probation, I was working as a Full Stack Developer and I developed two important web application which was used within the company.\r\n    \r\n    <br></br>During my academics at the University of Windsor, I was involved in many projects both academics projects and competitions. I also participated in Epic Blue Sky Competition – 2021 where my team won Second place for best project Idea. By enjoying working on many projects in Windsor, I was introduced to many technologies such as AWS EC2, Azure, JIRA, GitHub, and software development methodologies like DevOps and Agile. I was also gaining some knowledge with Java, MongoDB, Apache Server Deployment, etc. During working on the projects, I would always have Unique participation. I also advanced my skills by undertaking many online courses which introduced me to Software Development Life Cycle and practical understanding on Machine Learning and Hadoop.\r\n    \r\n    <br></br>I hope that my experienced and knowledge gained will help to support Google as a Software developer by developing applications and model building. Thank you for your review and I look forward to meeting you.\r\n    </p>\r\n    </>\r\n);\r\n\r\nexport default HomePage;","import React from \"react\";\r\n\r\nconst About = () => (\r\n <>\r\n    <h1>About Me,</h1><br></br>\r\n\r\n    <p>After completing my undergraduate degree, higher studies were the priority for me. But I wish to gather some valuable work experience to gain a large perspective of the industry. Aligning to this Idea, I have three years of experience in the software field. Later I joined the University of Windsor for my graduate degree which helped me to gain further insight. With my experience and knowledge, I can support Google as a Software Developer.\r\n\r\n<br></br>My career in Accenture solutions helped me develop thorough insights into Software Testing, an important life-cycle of software development that improves performance, reliability, and quality of a product. I supported my project by implementing RPA scripts and manual testing with the web and mobile applications of a banking client. Later I had the opportunity to join Zoho Corporation as a Python backend developer where I was working on a wide range of technologies like Django, MySQL, Redis, Docker, GitLab, etc. After completing my probation period in Zoho, my team insisted me work on Frontend technologies like EmberJS and HTML along with the backend development. After my probation, I was working as a Full Stack Developer and I developed two important web application which was used within the company.\r\n    \r\n    <br></br>During my academics at the University of Windsor, I was involved in many projects both academics projects and competitions. I also participated in Epic Blue Sky Competition – 2021 where my team won Second place for best project Idea. By enjoying working on many projects in Windsor, I was introduced to many technologies such as AWS EC2, Azure, JIRA, GitHub, and software development methodologies like DevOps and Agile. I was also gaining some knowledge with Java, MongoDB, Apache Server Deployment, etc. During working on the projects, I would always have Unique participation. I also advanced my skills by undertaking many online courses which introduced me to Software Development Life Cycle and practical understanding on Machine Learning and Hadoop.\r\n    \r\n    <br></br>I hope that my experienced and knowledge gained will help to support Google as a Software developer by developing applications and model building. Thank you for your review and I look forward to meeting you.\r\n    </p>\r\n    </>\r\n);\r\n\r\nexport default About;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({projects}) => (\r\n\r\n    <>\r\n    {projects.map((project,key) => (\r\n        \r\n            \r\n        <Link className=\"article-list-item\" to={`/project/${project.name}`} key={key}>\r\n        <h3>\r\n        {project.title}</h3>\r\n        <p>{project.content[0].substring(0,20)}..</p>\r\n        \r\n        </Link>\r\n \r\n))}\r\n        \r\n </>    \r\n );\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\n\r\nconst Commentlist = ( { comment } ) => (\r\n    \r\n    <>\r\n    \r\n    <h3>Comments:</h3>\r\n\r\n    {\r\n        comment.map( (comment, key) => (\r\n            <div className=\"comment\" key={key}>\r\n                <h4>{comment.username}</h4>\r\n                <p>{comment.text}</p>\r\n            </div>\r\n        ))\r\n    }\r\n\r\n    </>\r\n);\r\n\r\nexport default Commentlist;","import React from \"react\";\r\n\r\n\r\nconst VoteSection = ( {projectName, votes, setprojectInfo} ) => {\r\n\r\n    const voteProject = async () => {\r\n        const result = await fetch(`/api/project/${projectName}/votes/`, {\r\n            method : \"post\",\r\n\r\n        });\r\n\r\n        const body = await result.json();\r\n\r\n        setprojectInfo(body);\r\n        \r\n    }\r\n    // console.log(body);\r\n    return (\r\n\r\n        <div id=\"upvotes-section\">\r\n\r\n    <button onClick={() => voteProject()}>Add Vote</button>\r\n    <p> this votes {votes} times</p>\r\n\r\n    </div>\r\n\r\n    );\r\n    \r\n    \r\n};\r\n\r\nexport default VoteSection;","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n    <h1> \r\n        Error 404 : Requested Page Not Found \r\n    </h1>\r\n);\r\n\r\nexport default NotFound;","const projects = [\r\n\r\n    {\r\n\r\n         name: \"pro1\",\r\n         title : \"Title 1\",\r\n         content : [\"Orange Health is an on-demand diagnostics service for Indian consumers. This is India's fastest diagnostic service that is backed by high-quality investors like Y Combinator, along with marquee healthcare and global investors.The founders are Dhruv Gupta (Serial tech entrepreneur with 2 successful exits) & Tarun Bhambra (Experienced corporate leader and VC investor) have 15+ years of combined healthcare experience and have together built a profitable health-tech business, serving 100m+ users.We have a team of experienced operations, product leaders, engineers, and healthcare professionals, who have built & scaled innovative platforms. The team hails from leading educational institutions like IIT-Kharagpur, University of Michigan, IIT-Roorkee, ISB, IIIT, etc, and with experience in high-quality companies like McKinsey, ITC, PwC, Matrix Partners, Wockhardt, and leading healthcare companies.\",\"Hello\"],\r\n    },\r\n\r\n    {\r\n\r\n        name: \"pro2\",\r\n        title : \"Title 2\",\r\n        content : [\"Orange Health is an on-demand diagnostics service for Indian consumers. This is India's fastest diagnostic service that is backed by high-quality investors like Y Combinator, along with marquee healthcare and global investors.The founders are Dhruv Gupta (Serial tech entrepreneur with 2 successful exits) & Tarun Bhambra (Experienced corporate leader and VC investor) have 15+ years of combined healthcare experience and have together built a profitable health-tech business, serving 100m+ users.We have a team of experienced operations, product leaders, engineers, and healthcare professionals, who have built & scaled innovative platforms. The team hails from leading educational institutions like IIT-Kharagpur, University of Michigan, IIT-Roorkee, ISB, IIIT, etc, and with experience in high-quality companies like McKinsey, ITC, PwC, Matrix Partners, Wockhardt, and leading healthcare companies.\",\"Hello\"],\r\n   },\r\n\r\n   {\r\n\r\n    name: \"pro3\",\r\n    title : \"Title 3\",\r\n    content : [\"Orange Health is an on-demand diagnostics service for Indian consumers. This is India's fastest diagnostic service that is backed by high-quality investors like Y Combinator, along with marquee healthcare and global investors.The founders are Dhruv Gupta (Serial tech entrepreneur with 2 successful exits) & Tarun Bhambra (Experienced corporate leader and VC investor) have 15+ years of combined healthcare experience and have together built a profitable health-tech business, serving 100m+ users.We have a team of experienced operations, product leaders, engineers, and healthcare professionals, who have built & scaled innovative platforms. The team hails from leading educational institutions like IIT-Kharagpur, University of Michigan, IIT-Roorkee, ISB, IIIT, etc, and with experience in high-quality companies like McKinsey, ITC, PwC, Matrix Partners, Wockhardt, and leading healthcare companies.\",\"Hello\"],\r\n    }\r\n\r\n\r\n\r\n]\r\n\r\nexport default projects;","\r\nimport React, { useState, useEffect} from \"react\";\r\n\r\nconst Addcomment = ( {projectName, setprojectInfo,} ) => {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [commenttext, setcommenttext] = useState(\"\");\r\n\r\n    const addcomment = async ( ) => {\r\n\r\n        const result = await fetch(`/api/project/${projectName}/addcomt/` , {\r\n          \r\n            method : \"post\",\r\n            body : JSON.stringify({username, text: commenttext}),\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\",\r\n            }\r\n        });\r\n\r\n        const body = await result.json();\r\n        setprojectInfo(body);\r\n        setUsername(\"\");\r\n        setcommenttext(\"\");\r\n    }\r\n\r\n    return (\r\n   \r\n   <div id=\"add-comment-form\">\r\n    \r\n    <h3>Add a comment</h3>\r\n\r\n    <label>\r\n        Name: <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n    </label>\r\n    \r\n    <label>\r\n        Comment: <textarea rows=\"4\" cols=\"50\" value={commenttext} onChange={(event) => setcommenttext(event.target.value)}/>\r\n    </label>\r\n\r\n    <button onClick = { () => addcomment()}> Add Comment </button>\r\n\r\n    </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Addcomment;","import { map } from \"async\";\r\nimport React , { useState,  useEffect }from \"react\";\r\nimport ProjectList from \"../components/ProjectList\";\r\nimport Commentlist from  \"../components/Commentlist\";\r\nimport VoteSection from \"../components/Vote\";\r\nimport NotFound from \"./NotFound\";\r\nimport projects from \"./Project-content\";\r\nimport Addcomment from \"../components/Addcomment\";\r\n\r\nconst Project = ({ match }) => {\r\n\r\n    \r\n    \r\n    const name = match.params.name;\r\n    const project = projects.find(project => project.name === name)\r\n\r\n    const [projectInfo, setprojectInfo] = useState({\r\n        votes : 0,\r\n        Comment : [],\r\n    });\r\n\r\n    useEffect( () => {\r\n    \r\n\r\n        const fetchData = async () => {\r\n            const result = await fetch (`/api/project/${name}`);\r\n            const body = await result.json();\r\n\r\n            setprojectInfo(body);\r\n\r\n        }\r\n\r\n        fetchData();\r\n    },[name]);\r\n\r\n    if (!project) return <NotFound />\r\n    const otherProjects = projects.filter(project => project.name !== name)\r\n\r\n    console.log(projectInfo);\r\n    return(\r\n            <>\r\n\r\n            <h1> A Projects {name}</h1><br></br>\r\n            <h2>{project.title}</h2>\r\n\r\n            \r\n\r\n             \r\n\r\n            <VoteSection projectName={name} votes={projectInfo.votes} setprojectInfo={setprojectInfo} />\r\n            \r\n\r\n            {project.content.map((paragraph, key) => (\r\n                <p key={key}>{paragraph}</p>\r\n            ))\r\n            \r\n            }\r\n\r\n            <Addcomment projectName={name} setprojectInfo={setprojectInfo} />\r\n\r\n            <Commentlist comment={projectInfo.Comment} />\r\n\r\n            <h3>Other Projects</h3>\r\n            <ProjectList projects= {otherProjects} />\r\n\r\n            \r\n            </>\r\n        );\r\n\r\n    }\r\n\r\nexport default Project;","import React from \"react\";\r\nimport projects from \"./Project-content\";\r\nimport ProjectList from \"../components/ProjectList\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst ProjectListpage = () => (\r\n <>\r\n    <h1>Project List</h1><br></br>\r\n\r\n    \r\n     \r\n   <ProjectList projects={projects} />\r\n\r\n   \r\n    </>\r\n);\r\n\r\nexport default ProjectListpage;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => (\r\n\r\n<nav>\r\n\r\n<ul>\r\n\r\n    <li>\r\n        <Link to=\"/\"> Home </Link>\r\n    </li>\r\n    <li>\r\n        <Link to=\"/about\"> About </Link>\r\n    </li>\r\n    {/* <li>\r\n        <Link to=\"/project\"> Project </Link>\r\n    </li> */}\r\n    <li>\r\n        <Link to=\"/project-list\"> Project List </Link>\r\n    </li>\r\n\r\n</ul>\r\n\r\n\r\n</nav>\r\n);\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\nimport {\n\n  BrowserRouter as Router,\n  Route,\n  Switch,\n\n} from \"react-router-dom\";\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport About from \"./pages/About\";\nimport Project from \"./pages/Project\";\nimport ProjectListpage from \"./pages/ProjectListpage\";\nimport NavBar from \"./NavBar\"\nimport NotFound from \"./pages/NotFound\";\n\nclass App extends Component{\n\n  render(){\n\n  return (\n\n    <Router>\n    <div className=\"App\">\n    <NavBar />\n      <div id= \"page-body\">\n        <Switch>\n      <Route path=\"/\" component={HomePage} exact />\n      <Route path=\"/about\" component={About} />\n        <Route path=\"/project/:name\" component={Project} />\n        <Route path=\"/project-list\" component={ProjectListpage} />\n        <Route component={NotFound} />\n        </Switch>\n        </div>\n    </div>\n    </Router>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"whatwg-fetch\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}